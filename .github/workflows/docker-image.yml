name: week-1-ci

on: [push]

jobs:
  build-and-push-app-ml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: week-3/
          file: week-3/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/week-3:latest    
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/week-3:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/week-3:buildcache,mode=max

  build-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f week-3/requirements.txt ]; then pip install -r week-3/requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pip install numpy
          pip install torch
          pip install torchaudio
          pip install torchtext
          pip install torchvision
          pip install wandb
          pip install great-expectations
          pip install transformers==4.22.2

          pytest week-3/news-classification/tests/test_data.py
          pytest week-3/news-classification/tests/test_code.py
          pytest week-3/news-classification/tests/test_model.py

